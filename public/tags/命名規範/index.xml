<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>命名規範 on Tomatos&#39;s Cat</title>
        <link>https://michellellehcim.github.io/tags/%E5%91%BD%E5%90%8D%E8%A6%8F%E7%AF%84/</link>
        <description>Recent content in 命名規範 on Tomatos&#39;s Cat</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <lastBuildDate>Sun, 24 Nov 2024 10:00:00 +0000</lastBuildDate><atom:link href="https://michellellehcim.github.io/tags/%E5%91%BD%E5%90%8D%E8%A6%8F%E7%AF%84/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Python 底線用法全解析：從命名慣例到魔術方法</title>
        <link>https://michellellehcim.github.io/p/python-underscore/</link>
        <pubDate>Sun, 24 Nov 2024 10:00:00 +0000</pubDate>
        
        <guid>https://michellellehcim.github.io/p/python-underscore/</guid>
        <description>&lt;img src="https://michellellehcim.github.io/p/python-underscore/python_underscore.png" alt="Featured image of post Python 底線用法全解析：從命名慣例到魔術方法" /&gt;&lt;h1 id=&#34;-python-底線用法全解析&#34;&gt;⚙️ Python 底線用法全解析
&lt;/h1&gt;&lt;p&gt;你是否曾經看過 Python 程式碼中滿是底線的命名方式，像是 &lt;code&gt;__init__&lt;/code&gt;、&lt;code&gt;_name&lt;/code&gt; 或 &lt;code&gt;for _ in range()&lt;/code&gt;？&lt;br&gt;
這些底線並不是隨便寫的，而是有約定俗成的「潛規則」，讓你能更清楚地表達&lt;strong&gt;變數或函式的用途與作用範圍&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;目錄&#34;&gt;目錄
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#-%e5%96%ae%e5%ba%95%e7%b7%9a%e6%9a%ab%e6%99%82%e4%b8%8d%e9%87%8d%e8%a6%81%e7%9a%84%e8%ae%8a%e6%95%b8&#34; &gt;1️⃣ &lt;code&gt;_&lt;/code&gt;：單底線（暫時、不重要的變數）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#-_name-%e5%96%ae%e5%ba%95%e7%b7%9a%e9%96%8b%e9%a0%ad%e5%bc%b1%e7%a7%81%e6%9c%89%e5%b1%ac%e6%80%a7&#34; &gt;2️⃣ &lt;code&gt;_name&lt;/code&gt;：單底線開頭（弱私有屬性）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#-name_-%e5%96%ae%e5%ba%95%e7%b7%9a%e7%b5%90%e5%b0%be%e9%81%bf%e9%96%8b%e4%bf%9d%e7%95%99%e5%ad%97&#34; &gt;3️⃣ &lt;code&gt;name_&lt;/code&gt;：單底線結尾（避開保留字）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#-__name-%e9%9b%99%e5%ba%95%e7%b7%9a%e9%96%8b%e9%a0%ad%e5%90%8d%e7%a8%b1%e6%94%b9%e5%af%ab&#34; &gt;4️⃣ &lt;code&gt;__name&lt;/code&gt;：雙底線開頭（名稱改寫（name mangling））&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#-__name__-%e9%9b%99%e5%ba%95%e7%b7%9a%e5%8c%85%e5%a4%be%e9%ad%94%e8%a1%93%e6%96%b9%e6%b3%95&#34; &gt;5️⃣ &lt;code&gt;__name__&lt;/code&gt;：雙底線包夾（魔術方法（magic method））&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#-%e5%b8%b8%e8%a6%8b%e5%95%8f%e9%a1%8c&#34; &gt;❓ 常見問題&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#q1-_%e5%8f%af%e4%bb%a5%e8%a2%ab%e7%95%b6%e4%bd%9c%e8%ae%8a%e6%95%b8%e5%90%8d%e5%97%8e&#34; &gt;Q1：&lt;code&gt;_&lt;/code&gt; 可以被當作變數名嗎？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#q2-%e6%88%91%e5%9c%a8%e9%a1%9e%e5%88%a5%e8%a3%a1%e5%af%ab-_%e8%ae%8a%e6%95%b8%e5%b0%b1%e7%9c%9f%e7%9a%84%e8%ae%8a%e7%a7%81%e6%9c%89%e4%ba%86%e5%97%8e&#34; &gt;Q2：我在類別裡寫 &lt;code&gt;_變數&lt;/code&gt;，就真的變私有了嗎？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#q3-%e5%8f%af%e4%bb%a5%e8%87%aa%e5%b7%b1%e5%ae%9a%e7%be%a9-__myfunc__-%e5%97%8e&#34; &gt;Q3：可以自己定義 &lt;code&gt;__myfunc__()&lt;/code&gt; 嗎？&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;1-_單底線暫時不重要的變數&#34;&gt;1️⃣ &lt;code&gt;_&lt;/code&gt;：單底線（暫時、不重要的變數）
&lt;/h2&gt;&lt;h3 id=&#34;-用法用在不需要用到的變數上代表我不在乎這個值&#34;&gt;✅ 用法：用在不需要用到的變數上，代表「我不在乎這個值」。
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;_&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 印出 5 次&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這裡的 &lt;code&gt;_&lt;/code&gt; 只是個「佔位符」，不會真的被使用。&lt;/p&gt;
&lt;h3 id=&#34;-注意&#34;&gt;⚠ 注意：
&lt;/h3&gt;&lt;p&gt;&lt;code&gt;_&lt;/code&gt; 雖然可以用來存上一個結果（例如 REPL 模式下），但一般不要重複用 &lt;code&gt;_&lt;/code&gt; 存資料，會讓程式難以維護。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;2-_name單底線開頭弱私有屬性&#34;&gt;2️⃣ &lt;code&gt;_name&lt;/code&gt;：單底線開頭（弱私有屬性）
&lt;/h2&gt;&lt;h3 id=&#34;-用法這是一種-命名慣例naming-convention表示這是內部用的請不要在類別外部使用&#34;&gt;✅ 用法：這是一種 &lt;strong&gt;命名慣例（naming convention）&lt;/strong&gt;，表示「這是內部用的，請不要在類別外部使用」。
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_age&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;30&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 弱私有&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Person&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;p&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_age&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 雖然可以存取，但通常建議不要&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;並不是&lt;strong&gt;真正的私有（private）&lt;/strong&gt;，只是&lt;strong&gt;提醒其他開發者「請小心使用」&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;如果在模組中用 &lt;code&gt;from module import *&lt;/code&gt;，開頭為 &lt;code&gt;_&lt;/code&gt; 的函式/變數 &lt;strong&gt;不會被匯入&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-name_單底線結尾避開保留字&#34;&gt;3️⃣ &lt;code&gt;name_&lt;/code&gt;：單底線結尾（避開保留字）
&lt;/h2&gt;&lt;h3 id=&#34;-用法當變數名稱與-python-保留字keyword衝突時可以在後面加底線&#34;&gt;✅ 用法：當變數名稱與 Python 保留字（keyword）衝突時，可以在後面加底線。
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;class_&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;Math&amp;#34;&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 因為 class 是保留字&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;也常見於解構時命名變數避免衝突。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;4-__name雙底線開頭名稱改寫--name-mangling&#34;&gt;4️⃣ &lt;code&gt;__name&lt;/code&gt;：雙底線開頭（名稱改寫 / name mangling）
&lt;/h2&gt;&lt;h3 id=&#34;-用法&#34;&gt;✅ 用法：
&lt;/h3&gt;&lt;p&gt;這是 Python 提供的「&lt;strong&gt;名稱改寫機制（Name Mangling）&lt;/strong&gt;」，目的是&lt;strong&gt;避免子類別不小心覆寫到父類別的內部變數或方法名稱&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;當你使用雙底線開頭命名（例如 &lt;code&gt;__type&lt;/code&gt;），Python 會自動幫它重新命名為 &lt;strong&gt;&lt;code&gt;_類別名稱__變數名&lt;/code&gt;&lt;/strong&gt; 的格式，這樣即使在子類別中出現同名變數，也不會互相干擾。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;nc&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__type&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;mammal&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;Animal&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;__type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;          &lt;span class=&#34;c1&#34;&gt;# ❌ AttributeError: &amp;#39;Animal&amp;#39; object has no attribute &amp;#39;__type&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;_Animal__type&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# ✅ OK，實際上變數被重新命名成 _Animal__type&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h3 id=&#34;-為什麼-__type-不行&#34;&gt;🧠 為什麼 &lt;code&gt;__type&lt;/code&gt; 不行？
&lt;/h3&gt;&lt;p&gt;當我們寫 &lt;code&gt;self.__type&lt;/code&gt; 時，Python 在背後其實會把它改名為 &lt;code&gt;self._Animal__type&lt;/code&gt;。這是為了&lt;strong&gt;保護變數不被外部或子類誤用或覆蓋&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;所以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;__type&lt;/code&gt; 直接取值就會報錯，因為這個名字根本不存在於物件的屬性列表中。&lt;/li&gt;
&lt;li&gt;正確的變數名已經被改成了 &lt;code&gt;_Animal__type&lt;/code&gt; (可以透過印出 &lt;code&gt;dir(a)&lt;/code&gt; 來查看)。也就是說，它其實是存到 &lt;code&gt;self._Animal__type&lt;/code&gt; 這個變數裡，而不是 &lt;code&gt;self.__type&lt;/code&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-小提醒&#34;&gt;📌 小提醒：
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;在 Python 中，此改名並非真正的私有保護&lt;/strong&gt;，它只是讓存取更困難一點。&lt;/li&gt;
&lt;li&gt;請避免濫用這個機制，通常只有在你寫大型專案、需要確保屬性不會被子類或外部干擾時才會使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;5-__name__雙底線包夾--dunder-method-或是叫做魔術方法--magic-method&#34;&gt;5️⃣ &lt;code&gt;__name__&lt;/code&gt;：雙底線包夾 / Dunder method （或是叫做魔術方法 / magic method）
&lt;/h2&gt;&lt;h3 id=&#34;-用法-1&#34;&gt;✅ 用法：
&lt;/h3&gt;&lt;p&gt;這是 Python 特有的語法設計，是預留給內建功能或是魔術方法使用的。&lt;/p&gt;
&lt;p&gt;常見例子包括：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__init__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 建構子（constructor）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;fm&#34;&gt;__str__&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;bp&#34;&gt;self&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;   &lt;span class=&#34;c1&#34;&gt;# 轉為字串&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;pass&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;這些方法都有特殊用途，不建議自創這類命名。&lt;/li&gt;
&lt;li&gt;最常見的例子是模組入口判斷：&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;代表此檔案被「直接執行」而非被匯入。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-常見問題&#34;&gt;❓ 常見問題
&lt;/h2&gt;&lt;h3 id=&#34;q1_-可以被當作變數名嗎&#34;&gt;Q1：&lt;code&gt;_&lt;/code&gt; 可以被當作變數名嗎？
&lt;/h3&gt;&lt;p&gt;A：可以，但不建議長時間使用，容易混淆。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;q2我在類別裡寫-_變數就真的變私有了嗎&#34;&gt;Q2：我在類別裡寫 &lt;code&gt;_變數&lt;/code&gt;，就真的變私有了嗎？
&lt;/h3&gt;&lt;p&gt;A：不是真的私有，只是&lt;strong&gt;開發者之間的約定俗成&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;q3可以自己定義-__myfunc__-嗎&#34;&gt;Q3：可以自己定義 &lt;code&gt;__myfunc__()&lt;/code&gt; 嗎？
&lt;/h3&gt;&lt;p&gt;A：可以，但不建議。&lt;code&gt;__xxx__&lt;/code&gt; 是給 Python 保留的，請避免自己創造。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-你最常用哪種底線寫法&#34;&gt;💬 你最常用哪種底線寫法？
&lt;/h2&gt;&lt;p&gt;你在開發時最常遇到哪一種底線命名方式呢？&lt;br&gt;
歡迎留言分享你的使用情境，或是你曾經踩過的坑 🕳️！&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
