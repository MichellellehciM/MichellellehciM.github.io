[{"content":"Welcome to Hugo theme Stack. This is your first post. Edit or delete it, then start writing!\nFor more information about this theme, check the documentation: https://stack.jimmycai.com/\nWant a site like this? Check out hugo-theme-stack-stater\nPhoto by Pawel Czerwinski on Unsplash\n","date":"2022-03-06T00:00:00Z","image":"https://michellellehcim.github.io/p/hello-world/cover_hu6307248181568134095.jpg","permalink":"https://michellellehcim.github.io/p/hello-world/","title":"第一篇"},{"content":"🌐 網站是怎麼運作的？ 你有沒有好奇過，當我們打開一個網站的時候，背後到底發生了什麼？今天，我們來聊聊網站的運作方式，以及如何建立一個購物網站的前端和後端架構。\n🖥️ 前端和後端：誰負責什麼？ 一個網站通常分為兩個主要部分：\n🎨 前端（Front-end）：使用者看到的部分，包括畫面、按鈕、文字和圖片。它負責和使用者互動，內容會在瀏覽器中運行。 🔧 後端（Back-end）：藏在幕後的部分，運行在伺服器上，負責處理資料、驗證規則，並確保前端取得正確資訊。 🌍 使用者訪問網站時發生了什麼？ 假設使用者 Jenny 想逛我們的購物網站，她在瀏覽器輸入 goodbuy.com，然後按下 Enter。這時：\n瀏覽器會發送一個請求，類似說：「嗨~~我想看看首頁！」\n伺服器收到後會處理這個請求，然後回傳結果給瀏覽器。這一來一回的過程是透過 HTTP（🔗 Hypertext Transfer Protocol） 完成的，這是一種讓瀏覽器和伺服器溝通的語言。\n(註) goodbuy.com是URL（🌐 Uniform Resource Locator） 等於是網站的地址，幫助 Jenny 的瀏覽器找到伺服器。\n⚙️ 後端如何提供內容？ 當伺服器收到請求後，有兩種方式回應：\n📄 生成完整的網頁並回傳：\n伺服器會使用 HTML（超文本標記語言） 建立完整的網頁，然後傳送給使用者。 📊 只提供所需數據，讓前端生成頁面：\n伺服器只傳回資料（例如產品清單），由前端工具（如 React）生成畫面。 🤔 選擇第二種方式的好處: 減輕伺服器壓力：伺服器只專注處理數據，能夠服務更多使用者。 擴展性更好：隨著用戶數量增加，伺服器的負擔也更容易管理。 這也是為什麼現在越來越多網站使用 React、Angular 和 Vue 來處理前端。\n🛠️ 後端的角色：資料的管家 如果把頁面生成交給前端，那後端的主要任務就是管理數據，並提供 API（應用程式介面，Application Programming Interface）。\n🎛️ API 是什麼？ API 就像遙控器上的按鈕：\n每個按鈕都有特定功能，比如開關電視或調整音量。 同樣，API 是伺服器提供的「按鈕」，讓前端用來取得產品資料或提交訂單。 🐍 用 Django 建立 API 在後端世界裡，Django 是一個非常受歡迎的框架，能快速幫助我們建立 API：\nDjango 讓處理數據和提供接口變得更簡單高效。 前端應用（例如使用 React 或 Angular 開發的網站）可以透過 API 與後端互動，完成查詢產品或提交訂單的功能。 🏁 結論 現代網站開發強調分工合作：\n🎨 前端 負責生成畫面，提升使用者體驗。 🔧 後端 專注處理數據和業務邏輯，提供高效的 API。 如果你想建立一個高效的網站，像 Django 這樣的後端框架絕對是值得考慮的好選擇！希望這次的分享讓你對網站的運作有更清楚的了解！ 🚀\n","date":"2024-10-18T10:00:00Z","image":"https://michellellehcim.github.io/p/web-work/web_work_hu900111646212904461.png","permalink":"https://michellellehcim.github.io/p/web-work/","title":"網站是怎麼運作的？"},{"content":"Django 是目前最受歡迎的 Web 框架之一，許多企業，包括 Instagram、Spotify、Dropbox、Pinterest 等，都選擇 Django 作為開發後端的主要技術。為什麼 Django 受到企業青睞？本文將從 開發效率、安全性、可擴展性、社群支持 等方面分析 Django 的優勢。\n1. 開發效率高 Django 遵循 \u0026ldquo;Batteries Included\u0026rdquo;（電池全配） 原則，內建許多強大的功能，減少開發者從零開始設計系統的時間。\n✅ 內建功能 ORM（Object-Relational Mapping）：讓開發者用 Python 直接操作資料庫，避免手寫 SQL。 身份驗證（Auth System）：內建用戶管理系統，處理登入、註冊、權限控管。 Admin Panel（管理後台）：自動生成管理介面，方便管理數據。 表單處理（Forms）：內建表單驗證與數據處理，提高開發效率。 ✅ 快速開發 MVP Django 幫助企業快速建立 最小可行產品（MVP），適合新創公司測試市場需求，降低開發成本。\n2. 高安全性 Django 內建多種安全機制，幫助企業降低安全風險，避免常見的 Web 攻擊。\n🔒 內建安全防護 SQL Injection 防護：ORM 自動處理 SQL 查詢，避免 SQL 注入攻擊。 CSRF（跨站請求偽造）防護：防止未經授權的請求。 XSS（跨站腳本攻擊）防護：自動轉義 HTML，防止惡意腳本執行。 密碼加密存儲：使用 PBKDF2、Argon2、BCrypt 等強大加密算法。 對於處理敏感數據的企業（如金融、醫療、電子商務），Django 是一個值得信賴的選擇。\n3. 可擴展性強 Django 適用於 從小型應用到大型系統，隨著業務成長，可以輕鬆擴展。\n📈 企業級擴展能力 支援快取（Caching）：Redis、Memcached 讓 Django 快速處理大量請求。 可水平擴展：支援負載均衡，可擴展到多台伺服器。 支援 Microservices：透過 Django REST Framework（DRF），可輕鬆開發 API 服務，適合微服務架構。 許多大型應用，如 Instagram、Disqus、Mozilla，都用 Django 來處理大規模流量。\n4. 強大的社群與企業支持 Django 由 Django Software Foundation（DSF） 維護，擁有活躍的開源社群和大量第三方套件。\n🌍 企業與開發者社群 開發者眾多：Python 是全球最受歡迎的語言之一，學習 Django 門檻低。 第三方擴展豐富：如 Django REST Framework（DRF）、Celery（背景任務）、Channels（即時應用）。 免費與開源：Django 採用 BSD 授權，企業可自由使用，無需支付授權費。 這些優勢讓 Django 成為企業開發的首選之一。\n5. 與 Python 生態系統無縫整合 Python 是 AI、機器學習、數據分析 領域的熱門語言，而 Django 可以輕鬆與這些技術結合。\n🤖 AI / 數據應用 Django + Pandas / NumPy：適合數據分析應用。 Django + TensorFlow / PyTorch：可開發 AI 應用。 Django + Celery：用於處理大規模數據、排程任務。 對於 AI 驅動的企業，如 Netflix、Spotify，Django 是理想的選擇。\n🔥 結論：Django 為何受企業歡迎？ 企業需求 Django 解決方案 快速開發 內建 ORM、Auth、Admin Panel，提高開發效率 高安全性 內建 CSRF、XSS、SQL Injection 防護 可擴展性 支援快取、負載均衡、微服務架構 AI / 數據應用 與 Python 生態整合，適合數據驅動企業 社群與企業支持 開源、免費、大量第三方套件支援 綜合來看，Django 具備 高效、安全、可擴展 的特性，能夠滿足企業從小型應用到大型系統的需求，因此成為許多企業的首選 Web 框架！🚀\n📌 你使用過 Django 嗎？歡迎留言分享你的開發經驗！\n","date":"2024-10-16T20:00:00Z","image":"https://michellellehcim.github.io/p/django-intro/django_intro_hu1015426287199860554.png","permalink":"https://michellellehcim.github.io/p/django-intro/","title":"為什麼Youtube、instagrm等知名企業愛用 Django？"},{"content":"什麼是 Node.js？ 簡單來說，Node.js 是一個讓你在電腦上執行 JavaScript 程式的工具。這跟你在網頁瀏覽器上看到的 JavaScript 不太一樣，因為它可以直接運行在電腦上，而不需要透過瀏覽器。\n但它的用途遠不止於此~ 它讓 JavaScript 不再只限於瀏覽器內運行，而能用來開發功能強大的應用程式，例如伺服器、API 服務、工具應用等。\nNode.js 的優點 非同步與事件驅動架構 (Asynchronous and Event-Driven)：讓伺服器可以同時處理多個請求。 JavaScript 友好 (JavaScript-Friendly)：如果你有點 JavaScript 基礎，在學習 Node.js 上會更上手! 豐富的模組庫 (Rich Module Library, npm)：可以使用數十萬個免費模組，現成的工具能幫你快速完成專案。 可以用 Node.js 做什麼？ 建立後端伺服器 (Build Backend Servers)\n透過 Node.js，你可以快速建立一個處理用戶請求的伺服器，像是處理資料上傳、提供網頁內容，甚至管理使用者帳號。\n即時應用 (Real-Time Applications)\n開發聊天系統、即時遊戲或即時通知等需要快速資料更新的應用程式。例如，你可以用 Node.js 開發一個多人聊天室。\n搭建 API (Build APIs)\nNode.js 常被用來構建 REST API 或 GraphQL API，這樣你的前端應用程式或其他服務可以和後端資料庫溝通。\n處理資料 (Handle Data)\n使用 Node.js，可以讀寫檔案、操作資料庫，甚至處理大量的資料流，像是處理影片或音訊檔案。\n自動化工具 (Automation Tools)\n你可以用 Node.js 寫腳本，幫助你完成一些繁瑣的工作，比如檔案壓縮、圖片批次處理或自動測試程式碼。\n構建桌面應用 (Build Desktop Applications)\n結合框架如 Electron，你可以用 Node.js 開發跨平台的桌面應用程式，例如 Visual Studio Code 就是用 Node.js 製作的。\n打造高效能網站 (Create High-Performance Websites)\nNode.js 能讓你建造能快速處理大量請求的網站，特別適合處理高流量的應用，例如購物網站或媒體平台。\n物聯網開發 (IoT Development)\n結合硬體裝置，Node.js 可用於開發 IoT 應用程式，像是連接智能設備並處理資料。\n怎麼用 Node.js？ 官網上的示範很簡單，以下是大致步驟：\n下載 Node.js（選擇 LTS）\n到 Node.js 官網 下載並安裝 LTS 版本。\n檢查安裝是否成功\n打開終端機（Terminal 或命令提示字元），輸入以下指令：\n1 node -v 如果顯示版本號（例如 v20.18.0），表示安裝成功！\n執行一段 JavaScript 程式\n輸入:\n1 node 按下Enter, 然後繼續輸入以下程式碼:\n1 console.log(\u0026#39;Hello, Node.js!\u0026#39;); 按下Enter會看到程式輸出結果。\n還可以按照官網步驟建立一個簡單的伺服器\n1 2 3 4 5 6 7 8 9 10 import { createServer } from \u0026#39;node:http\u0026#39;; //建立伺服器 const server = createServer((req, res) =\u0026gt; { res.writeHead(200, { \u0026#39;Content-Type\u0026#39;: \u0026#39;text/plain\u0026#39; }); res.end(\u0026#39;Welcome to Node.js Server!\\n\u0026#39;); }); // 伺服器在http://127.0.0.1:3000監聽 server.listen(3000, \u0026#39;127.0.0.1\u0026#39;, () =\u0026gt; { console.log(\u0026#39;伺服器運行中：http://127.0.0.1:3000/\u0026#39;); }); 將以上程式碼存為server.mjs （檔名的副檔名 .mjs 是 Node.js 的 ES Module 格式），然後在終端機執行\n1 node server.mjs 執行後，終端機會出現以下訊息，表示伺服器已經成功啟動:\n伺服器運行中：http://127.0.0.1:3000/\n打開就能看到訊息：Welcome to Node.js Server!\n如果想停止伺服器，回到終端機，按下 Ctrl + C\n這樣你就已經完成了一個簡單的HTTP伺服器了，當你在瀏覽器訪問http://127.0.0.1:3000時，伺服器會接到一個HTTP請求(request)。\n它會回應(response)一段文字: Welcom to Node.js Server!\n\u0026lt;示範\u0026gt; 我用VS Code編輯器 總結 Node.js 是一個強大又靈活的工具，不僅適合建立伺服器，還能用來開發各種應用程式。無論你是新手還是有經驗的開發者，Node.js 都能幫助你快速開發功能，讓網站和應用程式的效能更上一層樓！\n","date":"2024-10-15T20:00:00Z","image":"https://michellellehcim.github.io/p/node-js-intro/node_js_hu11759947230538510114.png","permalink":"https://michellellehcim.github.io/p/node-js-intro/","title":"網站為什麼這麼快？原來是因為 Node.js！"},{"content":" 先到HackMD https://hackmd.io/ 註冊一個帳號, 登入後左上角直接點選 + Create note 就可以開始寫筆記了 ~\n以下是我整理的常用MD語法:\n1. 標題 (Heading) : 使用 # 符號來表示標題層級 # 標題一\n## 標題二\n### 標題三\n#### 標題四\n##### 標題五\n###### 標題六\n標題一 標題二 標題三 標題四 標題五 標題六 2. 粗體字: 文字的前後都加上** 這是**粗體文字**\n這是 粗體文字\n3. 斜體字: 文字的前後都加上* 這是*斜體文字*\n這是斜體文字\n4. 刪除線: 文字的前後都加上~~ 這是~~刪除線~~\n這是刪除線\n5. 無序清單: 項目前面使用 - 或 + 或 * 作為開頭 - 項目 1 - 項目 2 * 項目 3 * 項目 4 + 項目 5 + 項目 6 會自動縮排 \u0026amp; 分段如下:\n項目 1 項目 2 項目 3 項目 4 項目 5 項目 6 ６. 有序清單: 項目前面直接使用 數字+.作為開頭 1. 項目 1 2. 項目 2\n會自動縮排如下:\n項目 1 項目 2 7. 超連結: 語法[文字](網址) [Google](https://www.google.com)\n會變成:\nGoogle\n8. 圖片: 語法 ![替代文字](圖片網址) ![Markdown Logo](https://markdown-here.com/img/icon256.png)\r會變成:\n9. 分隔線: 輸入--- 或 *** (一定要連續輸入3個或3個以上才有效) --- (或 ***)\n會變成:\n10. 引用: 語法 \u0026gt; 文字 \u0026gt; 學程式好好玩\n會變成:\n學程式好好玩\n11. 程式碼(單行): 程式碼前後加上` (需要注意: ` 是在鍵盤最左上角, 和波浪 ~ 是同個鍵)\n`console.log(\u0026lsquo;Hello, world!\u0026rsquo;) `\n會變成:\nconsole.log('Hello, world!')\n12. 程式碼(多行): 程式碼前後加上``` 可以指定要哪一種程式語言，例如javascript\n1 2 3 4 5 ```javascript function sayHello() { console.log(\u0026#39;Hello, world!\u0026#39;); } ``` 會變成:\n1 2 3 function sayHello() { console.log(\u0026#39;Hello, world!\u0026#39;); } 13. 表格: 使用 | 和 - 建立表格 | 標題 1 | 標題 2 |\r|----------|----------|\r| 內容 1 | 內容 2 |\r| 內容 3 | 內容 4 |\r會變成以下:\n標題 1 標題 2 內容 1 內容 2 內容 3 內容 4 14. 任務清單: 語法 - , [] 或 [x] - [x] 已完成項目\r- [ ] 未完成項目\r會顯示:\n已完成項目 未完成項目 恭喜你已經學會基礎Markdown語法，是不是很簡單呢~\n","date":"2024-10-15T18:00:00Z","image":"https://michellellehcim.github.io/p/intro-markdown-basic/markdown%E8%AA%9E%E6%B3%95_%E5%85%A5%E9%96%80%E7%AF%87_hu14648741947410066582.png","permalink":"https://michellellehcim.github.io/p/intro-markdown-basic/","title":"基礎Markdown語法"},{"content":"如果你也正在轉職，非常推薦你也學會用HackMD編輯器!~\n什麼是HackMD呢? HackMD 是一款 即時協作的線上 Markdown 編輯器。\n它讓多人能夠同時在瀏覽器上編輯同一份 Markdown 文件，\n類似 Google Docs 的即時協作功能，但需要建立在 Markdown 語法上。\nHackMD有什麼優點呢? 1. 即時協作 多人可以同時在線上編輯同一份文件，並即時同步更新，避免「你改完後再給我改」的傳統流程。 在多人協作討論需求或整理筆記時，能大幅加速溝通。 2. Markdown 語法支援 Markdown 是輕量級標記語言，對工程師與技術人員而言相對熟悉，簡潔易讀。 HackMD 提供即時預覽，輸入 Markdown 後，右側可同步顯示渲染結果。 3. 方便的整合與分享 和google doc一樣都可以透過共享連結讓其他人閱讀或編輯文件，並且能自訂存取權限（公開、私有或僅限連結存取）。 產出的內容可以輕鬆轉成 HTML、PDF，或直接嵌入專案中。 支援與 GitHub、GitLab、Gist 等整合，讓文件管理與版本控制更輕鬆。 4. 支援簡報模式 HackMD 有內建的簡報功能，可將 Markdown 文件直接轉成簡報格式。 工程師可以用 Markdown 撰寫內容，一鍵切換為簡報模式，省去製作投影片的繁瑣流程。 為什麼許多工程師會喜歡使用HackMD呢? 熟悉的工作模式：Markdown 已在技術社群普及，結合 GitHub、GitLab，能無縫融入程式文件、生產力工具的工作流程。 快速協作：與其他開發者或跨部門同事共同撰寫技術文檔、需求規格，討論和修改同一份文件變得很直覺。 減少版本混亂：不需要再用 email 或多個版本檔案來回傳遞，降低「哪一版才是最新？」的疑慮。 一站式備忘：能直接在 HackMD 撰寫並整理各種筆記、教學文章或專案 Wiki，統一在同一平台中管理。 ","date":"2024-10-15T18:00:00Z","image":"https://michellellehcim.github.io/p/intro-hackmd/hackMD_hu7085793697080894398.jpg","permalink":"https://michellellehcim.github.io/p/intro-hackmd/","title":"工程師為什麼愛用HackMD?"},{"content":"下午終於開始上課了，老師要大家安裝一個平台叫做 \u0026ldquo;Discord\u0026rdquo; , 大家之後就可以在上面討論課程。\nDiscord其實是一個即時訊息和語音通話平台，\n最初是為遊戲玩家設計的，但現在已經擴展到許多不同的社群和團體使用。\n它可以讓用戶創建伺服器（Server），並在這些伺服器內進行語音、文字聊天、文件共享等。\nDiscord的功能： 語音和視訊通話：可進行一對一或群組語音通話、視訊通話。\n文字聊天：可以在不同的頻道中發送訊息、圖片、影片、表情符號等。\n伺服器管理：用戶可以創建、管理伺服器，設置不同的頻道和權限。\n機器人和擴展：可以使用機器人來自動執行某些任務，比如音樂播放、管理伺服器等。\nDiscord v.s. LINE： Discord LINE 用途 適合社群與團隊合作 日常通信，特別是家人、朋友間的聊天 溝通方式 支援伺服器、頻道、語音、直播 一對一、群組聊天、語音和視訊通話 功能 社群管理、機器人、直播等進階功能 文字訊息、語音通話、LINE Pay、貼圖 目標使用者 遊戲玩家、社群、團隊合作 家庭、朋友、同事 平台支持 Windows、Mac、iOS、Android Windows、Mac、iOS、Android 免費與付費 基本免費，付費版提供更多功能 基本免費，部分付費功能（貼圖、LINE Pay） 總的來說呢，Discord 是一個非常適合各種社群活動、團隊合作或娛樂交流的平台。\nDiscord 安裝 https://discord.com/download\n","date":"2024-10-14T18:00:00Z","image":"https://michellellehcim.github.io/p/intro-discord/Discord-Symbol_hu5736111891257977841.webp","permalink":"https://michellellehcim.github.io/p/intro-discord/","title":"什麼是Discord?"},{"content":"第一天開學的上午，課務組發給每人一張九宮格的遊戲單子，單子上面有各種問題，\n例如: 喜歡黑貓還是橘貓? 最喜歡吃什麼? 做過最瘋狂的事情是什麼?\n大家需要離開座位隨機找不同人問這些問題，最後上台介紹你剛剛問了誰，他的回答又是什麼。\n除了單子上的問題，大家也趁機透過聊天了解彼此的背景，\n我才發現班上有各行各業的人才，像是金融業、IC產業、設計師、公家機關、補教機構、高鐵、營養師等等。\n這讓我不禁感嘆，原來我們每個人都擁有著不一樣的經歷和故事，這樣的多元背景不僅讓課堂氣氛更加有趣，也讓我對未來的學習和交流充滿期待。\n這樣的活動不僅讓我們更了解彼此，還讓我深刻體會到每個人的獨特性和他們背後的故事，\n甚至讓我覺得每個人都有自己獨到的視角和經驗，對我的成長也將帶來很多啟發。\n這一天的活動讓我對這個班級產生了更多的興趣，也讓我期待在未來的日子裡，能和大家一起學習、成長，互相激勵，共同進步。\n","date":"2024-10-14T18:00:00Z","image":"https://michellellehcim.github.io/p/day-1/day1_%E8%AA%8D%E8%AD%98%E6%96%B0%E5%90%8C%E5%AD%B8%E5%92%8C%E7%92%B0%E5%A2%83%E5%AE%89%E8%A3%9D_hu11970047249149186396.png","permalink":"https://michellellehcim.github.io/p/day-1/","title":"轉職日記-Day1"},{"content":"This article offers a sample of basic Markdown syntax that can be used in Hugo content files, also it shows whether basic HTML elements are decorated with CSS in a Hugo theme.\nHeadings The following HTML \u0026lt;h1\u0026gt;—\u0026lt;h6\u0026gt; elements represent six levels of section headings. \u0026lt;h1\u0026gt; is the highest section level while \u0026lt;h6\u0026gt; is the lowest.\nH1 H2 H3 H4 H5 H6 Paragraph Xerum, quo qui aut unt expliquam qui dolut labo. Aque venitatiusda cum, voluptionse latur sitiae dolessi aut parist aut dollo enim qui voluptate ma dolestendit peritin re plis aut quas inctum laceat est volestemque commosa as cus endigna tectur, offic to cor sequas etum rerum idem sintibus eiur? Quianimin porecus evelectur, cum que nis nust voloribus ratem aut omnimi, sitatur? Quiatem. Nam, omnis sum am facea corem alique molestrunt et eos evelece arcillit ut aut eos eos nus, sin conecerem erum fuga. Ri oditatquam, ad quibus unda veliamenimin cusam et facea ipsamus es exerum sitate dolores editium rerore eost, temped molorro ratiae volorro te reribus dolorer sperchicium faceata tiustia prat.\nItatur? Quiatae cullecum rem ent aut odis in re eossequodi nonsequ idebis ne sapicia is sinveli squiatum, core et que aut hariosam ex eat.\nBlockquotes The blockquote element represents content that is quoted from another source, optionally with a citation which must be within a footer or cite element, and optionally with in-line changes such as annotations and abbreviations.\nBlockquote without attribution Tiam, ad mint andaepu dandae nostion secatur sequo quae. Note that you can use Markdown syntax within a blockquote.\nBlockquote with attribution Don\u0026rsquo;t communicate by sharing memory, share memory by communicating.\n— Rob Pike1\nTables Tables aren\u0026rsquo;t part of the core Markdown spec, but Hugo supports supports them out-of-the-box.\nName Age Bob 27 Alice 23 Inline Markdown within tables Italics Bold Code italics bold code A B C D E F Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus ultricies, sapien non euismod aliquam, dui ligula tincidunt odio, at accumsan nulla sapien eget ex. Proin eleifend dictum ipsum, non euismod ipsum pulvinar et. Vivamus sollicitudin, quam in pulvinar aliquam, metus elit pretium purus Proin sit amet velit nec enim imperdiet vehicula. Ut bibendum vestibulum quam, eu egestas turpis gravida nec Sed scelerisque nec turpis vel viverra. Vivamus vitae pretium sapien Code Blocks Code block with backticks 1 2 3 4 5 6 7 8 9 10 \u0026lt;!doctype html\u0026gt; \u0026lt;html lang=\u0026#34;en\u0026#34;\u0026gt; \u0026lt;head\u0026gt; \u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt; Code block indented with four spaces \u0026lt;!doctype html\u0026gt;\r\u0026lt;html lang=\u0026quot;en\u0026quot;\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026quot;utf-8\u0026quot;\u0026gt;\r\u0026lt;title\u0026gt;Example HTML5 Document\u0026lt;/title\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;p\u0026gt;Test\u0026lt;/p\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\rDiff code block 1 2 3 4 5 [dependencies.bevy] git = \u0026#34;https://github.com/bevyengine/bevy\u0026#34; rev = \u0026#34;11f52b8c72fc3a568e8bb4a4cd1f3eb025ac2e13\u0026#34; - features = [\u0026#34;dynamic\u0026#34;] + features = [\u0026#34;jpeg\u0026#34;, \u0026#34;dynamic\u0026#34;] One line code block 1 \u0026lt;p\u0026gt;A paragraph\u0026lt;/p\u0026gt; List Types Ordered List First item Second item Third item Unordered List List item Another item And another item Nested list Fruit Apple Orange Banana Dairy Milk Cheese Other Elements — abbr, sub, sup, kbd, mark GIF is a bitmap image format.\nH2O\nXn + Yn = Zn\nPress CTRL + ALT + Delete to end the session.\nMost salamanders are nocturnal, and hunt for insects, worms, and other small creatures.\nThe above quote is excerpted from Rob Pike\u0026rsquo;s talk during Gopherfest, November 18, 2015.\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-07T00:00:00Z","permalink":"https://michellellehcim.github.io/p/markdown-syntax-guide/","title":"Markdown Syntax Guide"},{"content":"Hugo theme Stack supports the creation of interactive image galleries using Markdown. It\u0026rsquo;s powered by PhotoSwipe and its syntax was inspired by Typlog.\nTo use this feature, the image must be in the same directory as the Markdown file, as it uses Hugo\u0026rsquo;s page bundle feature to read the dimensions of the image. External images are not supported.\nSyntax 1 ![Image 1](1.jpg) ![Image 2](2.jpg) Result Photo by mymind and Luke Chesser on Unsplash\n","date":"2023-08-26T00:00:00Z","image":"https://michellellehcim.github.io/p/image-gallery/2_hu15576070775610481867.jpg","permalink":"https://michellellehcim.github.io/p/image-gallery/","title":"Image gallery"},{"content":"For more details, check out the documentation.\nBilibili video Tencent video YouTube video Generic video file Your browser doesn't support HTML5 video. Here is a link to the video instead. Gist GitLab Quote Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\n― A famous person, The book they wrote Photo by Codioful on Unsplash\n","date":"2023-08-25T00:00:00Z","image":"https://michellellehcim.github.io/p/shortcodes/cover_hu17063188895770243625.jpg","permalink":"https://michellellehcim.github.io/p/shortcodes/","title":"Shortcodes"},{"content":"Stack has built-in support for math typesetting using KaTeX.\nIt\u0026rsquo;s not enabled by default side-wide, but you can enable it for individual posts by adding math: true to the front matter. Or you can enable it side-wide by adding math = true to the params.article section in config.toml.\nInline math This is an inline mathematical expression: $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$\n1 $\\varphi = \\dfrac{1+\\sqrt5}{2}= 1.6180339887…$ Block math $$\r\\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ 1 2 3 $$ \\varphi = 1+\\frac{1} {1+\\frac{1} {1+\\frac{1} {1+\\cdots} } } $$ $$\rf(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi\r$$ 1 2 3 $$ f(x) = \\int_{-\\infty}^\\infty\\hat f(\\xi)\\,e^{2 \\pi i \\xi x}\\,d\\xi $$ ","date":"2023-08-24T00:00:00Z","permalink":"https://michellellehcim.github.io/p/math-typesetting/","title":"Math Typesetting"}]